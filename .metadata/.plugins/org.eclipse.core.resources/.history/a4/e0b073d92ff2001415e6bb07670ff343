package com.helloworld;

import android.app.Activity;
import android.content.Context;
import android.media.AudioManager;
import android.os.Bundle;
import android.view.KeyEvent;
import android.widget.MediaController;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.VideoView;

public class MainActivity extends Activity {
	private SeekBar volumeSeekbar = null;
	private AudioManager audioManager = null;
	int progressChanged = 0;
	 int maxVolume=1;
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		String stringPath = "android.resource://" + getPackageName() + "/"
				+ R.raw.video;
		final VideoView videoView = (VideoView) findViewById(R.id.VideoView);

		videoView.setVideoPath(stringPath);

		MediaController mediaController = new MediaController(this);
		mediaController.setAnchorView(videoView);
		videoView.setMediaController(mediaController);

		videoView.start();
		initControls();
	}

	private void initControls() {
		try {
			volumeSeekbar = (SeekBar) findViewById(R.id.volbar);
			audioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);

			audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,
					AudioManager.ADJUST_RAISE, AudioManager.FLAG_SHOW_UI);
			audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,
					AudioManager.ADJUST_LOWER, AudioManager.FLAG_SHOW_UI);
			
			volumeSeekbar.setMax(audioManager
					.getStreamMaxVolume(AudioManager.STREAM_MUSIC));
			
			volumeSeekbar.setProgress(audioManager
					.getStreamVolume(AudioManager.STREAM_MUSIC));
			volumeSeekbar.setKeyProgressIncrement(1); 
			maxVolume = volumeSeekbar.getMax();
			volumeSeekbar
					.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
						@Override
						public void onStopTrackingTouch(SeekBar arg0) {
						}

						@Override
						public void onStartTrackingTouch(SeekBar arg0) {
						}

						@Override
						public void onProgressChanged(SeekBar arg0,
								int progress, boolean arg2) {
							progressChanged = progress;
							audioManager.setStreamVolume(AudioManager.STREAM_MUSIC,
									progressChanged, 0);
//							audioManager.setStreamVolume(AudioManager.STREAM_RING, progress, AudioManager.FLAG_SHOW_UI + AudioManager.FLAG_PLAY_SOUND);
							
						}
					});
		} catch (Exception e) {
			e.printStackTrace();
		}
		audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,
				progressChanged, AudioManager.FLAG_SHOW_UI);
		audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,
				progressChanged, AudioManager.FLAG_SHOW_UI);
		
	}

    @Override  
    public boolean onKeyDown(int keyCode, KeyEvent event)  
    {  
        //if one of the volume keys were pressed  
        if(keyCode == KeyEvent.KEYCODE_VOLUME_DOWN || keyCode == KeyEvent.KEYCODE_VOLUME_UP)  
        {  
            //change the seek bar progress indicator position  
        	volumeSeekbar.setProgress(audioManager.getStreamVolume(AudioManager.STREAM_RING));  
        }  
        //propagate the key event  
        return super.onKeyDown(keyCode, event);  
    }
}
